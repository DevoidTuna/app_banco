(()=>{"use strict";var t={d:(o,n)=>{for(var e in n)t.o(n,e)&&!t.o(o,e)&&Object.defineProperty(o,e,{enumerable:!0,get:n[e]})},o:(t,o)=>Object.prototype.hasOwnProperty.call(t,o)};t.d({},{F:()=>s});class o{constructor(t){this.id=t}deposito(t){return this.saldo+=t,!0}saque(t){return t<=this.saldo&&(this.saldo-=t,!0)}}class n extends o{constructor(t){super(t),this.saldo=1050}transferencia(t,o){let n=s.filter((t=>null!=t.contaCorrente&&o==t.contaCorrente.id)),e=s.filter((t=>null!=t.contaPoupanca&&o==t.contaPoupanca.id));return n.length>0||e.length>0?t<=this.saldo?(n.length>0?n[0].contaCorrente.deposito(t):e.length>0&&e[0].contaPoupanca.deposito(t),this.saque(t),!0):!(t>=this.saldo)&&void 0:"Conta do destinatário não encontrada, gentileza conferir as informações."}}class e extends o{constructor(t){super(t),this.saldo=480}}class r{constructor(t,o){this.id=r.numeroUsuarios,this.cpf=t,this.nome=o,this.contaCorrente=null,this.contaPoupanca=null,r.numeroUsuarios++}static numeroUsuarios=0;criarContaPoupanca(){return null==this.contaPoupanca&&(this.contaPoupanca=new e(2e3+this.id),!0)}criarContaCorrente(){return null==this.contaCorrente&&(this.contaCorrente=new n(1e3+this.id),!0)}}console.log("Bem vindo ao script básico de banco. Caso precise de ajuda, digite: ajuda()\n");const s=[];function a(t=null,o=null){let n=s.filter((o=>t==o.cpf));if(null==t||null==o)throw new Error("Gentileza chamar a função informando dentro dos parênteses seu CPF e NOME.");if(0==n.length)return s.push(new r(t,o)),!0;throw new Error("Usuário já tem conta no sistema.")}let i=0;for(let t=100;t<131;t++)a(t,"teste"+i),i++})();