(()=>{"use strict";class o{constructor(n,t){this.id=o.numeroUsuarios,this.cpf=n,this.nome=t,this.contaCorrente=null,this.contaPoupanca=null,o.numeroUsuarios++}static numeroUsuarios=0;criarContaPoupanca(){return null==this.contaPoupanca&&(this.contaPoupanca=new ContaPoupanca(2e3+this.id),!0)}criarContaCorrente(){return null==this.contaCorrente&&(this.contaCorrente=new ContaCorrente(1e3+this.id),!0)}}console.log("Bem vindo ao script básico de banco. Caso precise de ajuda, digite: ajuda()\n");const n=[];function t(t,e){if(0==n.filter((o=>t==o.cpf)).length)return n.push(new o(t,e)),!0;throw null==t||null==e?new Error("Gentileza chamar a função informando dentro dos parênteses seu CPF e NOME."):new Error("Usuário já tem conta no sistema.")}function e(o){let t=n.filter((n=>o==n.id||o==n.cpf));try{if(1==t.length)return t[0];throw new Error("Usuário não encontado.")}catch(o){console.log(o)}}let r=0;for(let o=100;o<131;o++)t(o,"teste"+r),r++;console.log(e(30)),console.log(e(20)),console.log(e(10)),console.log(n)})();